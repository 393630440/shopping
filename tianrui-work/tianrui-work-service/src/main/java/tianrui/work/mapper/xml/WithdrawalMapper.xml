<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="tianrui.work.mapper.java.WithdrawalMapper" >
  <resultMap id="BaseResultMap" type="tianrui.work.bean.Withdrawal" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="member_id" property="memberId" jdbcType="VARCHAR" />
    <result column="member_name" property="memberName" jdbcType="VARCHAR" />
    <result column="withdrawal_amount" property="withdrawalAmount" jdbcType="DOUBLE" />
    <result column="withdrawal_status" property="withdrawalStatus" jdbcType="VARCHAR" />
    <result column="createtime" property="createtime" jdbcType="BIGINT" />
    <result column="audit_time" property="auditTime" jdbcType="BIGINT" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, member_id, member_name, withdrawal_amount, withdrawal_status, createtime, audit_time, 
    remark
  </sql>
  
  <select id="selectByCondition" resultMap="BaseResultMap" parameterType="tianrui.work.bean.Withdrawal" >
    select 
    <include refid="Base_Column_List" />
    from member_withdrawal
    <where>
    	<if test="memberId != null and memberId != ''">
    		and member_id = #{memberId,jdbcType=VARCHAR}
    	</if>
    	<if test="memberName != null and memberName != ''">
    		and member_name = #{memberName,jdbcType=VARCHAR}
    	</if>
    	<if test="withdrawalStatus != null and withdrawalStatus != ''">
    		and withdrawal_status = #{withdrawalStatus,jdbcType=VARCHAR}
    	</if>
    </where>
    order by createtime desc
    <if test="pageNo != null">
   		limit #{pageNo,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
   	</if>
  </select>
  
  <select id="selectBycount" resultType="long" parameterType="tianrui.work.bean.Withdrawal" >
    select 
    count(0)
    from member_withdrawal
    <where>
    	<if test="memberId != null and memberId != ''">
    		and member_id = #{memberId,jdbcType=VARCHAR}
    	</if>
    	<if test="memberName != null and memberName != ''">
    		and member_name = #{memberName,jdbcType=VARCHAR}
    	</if>
    	<if test="withdrawalStatus != null and withdrawalStatus != ''">
    		and withdrawal_status = #{withdrawalStatus,jdbcType=VARCHAR}
    	</if>
    </where>
  </select>
  
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from member_withdrawal
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from member_withdrawal
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="tianrui.work.bean.Withdrawal" >
    insert into member_withdrawal (id, member_id, member_name, 
      withdrawal_amount, withdrawal_status, createtime, 
      audit_time, remark)
    values (#{id,jdbcType=VARCHAR}, #{memberId,jdbcType=VARCHAR}, #{memberName,jdbcType=VARCHAR}, 
      #{withdrawalAmount,jdbcType=DOUBLE}, #{withdrawalStatus,jdbcType=VARCHAR}, #{createtime,jdbcType=BIGINT}, 
      #{auditTime,jdbcType=BIGINT}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="tianrui.work.bean.Withdrawal" >
    insert into member_withdrawal
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="memberId != null" >
        member_id,
      </if>
      <if test="memberName != null" >
        member_name,
      </if>
      <if test="withdrawalAmount != null" >
        withdrawal_amount,
      </if>
      <if test="withdrawalStatus != null" >
        withdrawal_status,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="auditTime != null" >
        audit_time,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null" >
        #{memberId,jdbcType=VARCHAR},
      </if>
      <if test="memberName != null" >
        #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="withdrawalAmount != null" >
        #{withdrawalAmount,jdbcType=DOUBLE},
      </if>
      <if test="withdrawalStatus != null" >
        #{withdrawalStatus,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=BIGINT},
      </if>
      <if test="auditTime != null" >
        #{auditTime,jdbcType=BIGINT},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="tianrui.work.bean.Withdrawal" >
    update member_withdrawal
    <set >
      <if test="memberId != null" >
        member_id = #{memberId,jdbcType=VARCHAR},
      </if>
      <if test="memberName != null" >
        member_name = #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="withdrawalAmount != null" >
        withdrawal_amount = #{withdrawalAmount,jdbcType=DOUBLE},
      </if>
      <if test="withdrawalStatus != null" >
        withdrawal_status = #{withdrawalStatus,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=BIGINT},
      </if>
      <if test="auditTime != null" >
        audit_time = #{auditTime,jdbcType=BIGINT},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="tianrui.work.bean.Withdrawal" >
    update member_withdrawal
    set member_id = #{memberId,jdbcType=VARCHAR},
      member_name = #{memberName,jdbcType=VARCHAR},
      withdrawal_amount = #{withdrawalAmount,jdbcType=DOUBLE},
      withdrawal_status = #{withdrawalStatus,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=BIGINT},
      audit_time = #{auditTime,jdbcType=BIGINT},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>